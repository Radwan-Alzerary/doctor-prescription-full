const mongoose = require("mongoose");
const { Schema } = mongoose;

const EcoSchema = new Schema(
  {
    patient: {
      id: { type: Schema.Types.ObjectId, ref: "Patients" },
      name: { type: String },
      gender: { type: String },
    },
    type: { type: String },
    toDoctor: { type: String },
    wallThikness: {
      wallThikness: { type: String, default: "" },
      IVS: { type: String, default: "" },
      LVIPW: { type: String, default: "" },
      EF: { type: String, default: "" },
      RVID: { type: String, default: "" },
      LVPW: { type: String, default: "" },
      RVFW: { type: String, default: "" },
      LVH: { type: String, default: "" },
      RVH: { type: String, default: "" },
    },
    champerSize: {
      LA: { type: String, default: "" },
      LV: { type: String, default: "" },
      LVEDD: { type: String, default: "" },
      AO: { type: String, default: "" },
      AD: { type: String, default: "" },
      LVESD: { type: String, default: "" },
      LAVI: { type: String, default: "" },
      LVIDed: { type: String, default: "" },
      LVIDes: { type: String, default: "" },
      RAA: { type: String, default: "" },
      RA: { type: String, default: "" },
      RV: { type: String, default: "" },
    },
    DiastolicFunction: { type: String, default: "" },
    DiastolicDysfunctionGrade: { type: String, default: "" },
    PericardialEffusion: { type: String, default: "" },
    InteratrialSeptum: { type: String, default: "" },
    InteratrialCularSeptum: { type: String, default: "" },
    ECHOCARDIOGRAPHYFINDINGS: { type: String, default: "" },
    SystolicFunction:{type:String,default:""},
    WallHypokinesia: { type: String, default: "" },
    PerticardialEffusion: { type: String, default: "" },
    active: { type: Boolean, default: false },
    RWMA: { type: String, default: "" },
    Valves: { type: String, default: "" },
    PulmonaryHypertension: { type: String, default: "" },
    PulmonaryArtery: { type: String, default: "" },
    TrVelocity: { type: String, default: "" },
    EstimatedRVSP: { type: String, default: "" },
    PHTProbabiliy: { type: String, default: "" },
    Conclusion: { type: String, default: "" },
    RightVentricle: { type: String, default: "" },
    RightAtrium: { type: String, default: "" },
    COA: { type: String, default: "" },
    RightBentricle: { type: String, default: "" },
    TAPSE: { type: String, default: "" },
    I_e: { type: String, default: "" },
    AorticRoot: { type: String, default: "" },
    AorticValve: { type: String, default: "" },
    TricuspidValve: { type: String, default: "" },
    PulmonaryValve: { type: String, default: "" },
    LeftAtrium: { type: String, default: "" },
    LeftVentricle: { type: String, default: "" },
    MitralValveAML: { type: String, default: "" },
    Condusion: { type: String, default: "" },
    Conclusion: { type: String, default: "" },
    MitralValvePML: { type: String, default: "" },
    EF: { type: String, default: "" },
    childred: {
      CardiacPostion: { type: String, default: "" },
      Situs: { type: String, default: "" },
      Atrioventricular: { type: String, default: "" },
      GreatArteryRelation: { type: String, default: "" },
      VenousDrainage: { type: String, default: "" },
      Ventriculoarterial: { type: String, default: "" },
      comment: { type: String, default: "" },
      InterATrialSemtum: { type: String, default: "" },
      InterVentricularSeptum: { type: String, default: "" },
      Contracitility: { type: String, default: "" },
      CardiacChambersSize: { type: String, default: "" },
      LVSystolieFunctionEF: { type: String, default: "" },
      PDA: { type: String, default: "" },
      AorticValve: { type: String, default: "" },
      MitalValve: { type: String, default: "" },
      PulmonaryValve: { type: String, default: "" },
      TricuspedValve: { type: String, default: "" },
      AorticArch: { type: String, default: "" },
      PericardialEffusion: { type: String, default: "" },
      CardiacPostion: { type: String, default: "" },
    },
  },
  {
    timestamps: true,
  }
);

const Eco = mongoose.model("Eco", EcoSchema);

module.exports = Eco;
